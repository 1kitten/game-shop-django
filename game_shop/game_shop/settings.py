"""
Django settings for game_shop project.

Generated by 'django-admin startproject' using Django 2.2.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

import os
from .logging_formatter import CustomJsonFormatter

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '(+5!x0(4#(@a4e=fk!)n6mvide(!qfc%b(x1_uy=ui_kl$l-z9'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'app_shop',
    'app_user',
    'cart',
    'orders',
    'debug_toolbar'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'debug_toolbar.middleware.DebugToolbarMiddleware',
]

ROOT_URLCONF = 'game_shop.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'cart.context_processors.cart',
            ],
        },
    },
]

WSGI_APPLICATION = 'game_shop.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/

STATIC_DIR = os.path.join(BASE_DIR, 'static')
STATICFILES_DIRS = [STATIC_DIR]

STATIC_URL = '/static/'

MEDIA_ROOT = os.path.join(BASE_DIR, 'media/')
MEDIA_URL = '/media/'

LOGIN_REDIRECT_URL = '/'

CART_SESSION_ID = 'cart'

INTERNAL_IPS = [
    '127.0.0.1',
]

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'json_formatter': {
            '()': CustomJsonFormatter
        },
        'regular_formatter': {
            'format': "{asctime} - {levelname} - {module} - {message}",
            'style': "{"
        }
    },
    'handlers': {
        'user_authentication': {
            'class': 'logging.FileHandler',
            'filename': 'authentication.log',
            'formatter': 'json_formatter'
        },
        'user_increased_balance': {
            'class': 'logging.FileHandler',
            'filename': 'balance.log',
            'formatter': 'json_formatter'
        },
        'user_made_order': {
            'class': 'logging.FileHandler',
            'filename': 'orders.log',
            'formatter': 'json_formatter'
        },
        'user_decreased_balance': {
            'class': 'logging.FileHandler',
            'filename': 'decreased_balance.log',
            'formatter': 'json_formatter'
        },
        'user_status_changed': {
            'class': 'logging.FileHandler',
            'filename': 'user_status.log',
            'formatter': 'json_formatter'
        },
        'console': {
            'class': 'logging.StreamHandler',
            'formatter': 'regular_formatter'
        }
    },
    'loggers': {
        'user_authentication': {
            'handlers': ['user_authentication', 'console'],
            'propagate': False,
            'level': 'INFO'
        },
        'increased_balance': {
            'handlers': ['user_increased_balance', 'console'],
            'propagate': False,
            'level': 'INFO'
        },
        'orders': {
            'handlers': ['user_made_order', 'console'],
            'propagate': False,
            'level': 'INFO'
        },
        'decreased_user_balance': {
            'handlers': ['user_decreased_balance', 'console'],
            'propagate': False,
            'level': 'INFO'
        },
        'user_status': {
            'handlers': ['user_status_changed', 'console'],
            'propagate': False,
            'level': 'INFO'
        }
    }
}
